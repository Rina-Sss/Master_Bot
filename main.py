import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

# –¢–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø–æ–ª—É—á–∏–ª —É @BotFather
API_TOKEN = "8220290836:AAG7IudopuBPXYlE5hzqc7LY6zRm3h4kOkE"

# –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç—ã
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start (–±–æ—Ç —Å–º–æ–∂–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø–µ)
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∏ —è —É–∂–µ —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –≥—Ä—É–ø–ø–µ ‚ú®")

# –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message()
async def echo(message: types.Message):
    # –ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ
    if message.from_user.id != (await bot.me()).id:
        await message.reply(f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {message.text}")

# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ –±—Ä–æ—Å–∫–∞ ---
def roll_dice(expr: str) -> str:
    """
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç—ã: XdY, XdY+Z, XdY-Z
    –ù–∞–ø—Ä–∏–º–µ—Ä: 2d6, 1d20+5, 3d10-2
    """
    match = re.match(r"(\d*)d(\d+)([+-]\d+)?", expr.strip().lower())
    if not match:
        return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä: /roll 2d6"

    num = int(match.group(1)) if match.group(1) else 1  # —Å–∫–æ–ª—å–∫–æ –∫—É–±–æ–≤
    sides = int(match.group(2))  # –≥—Ä–∞–Ω–µ–π
    mod = int(match.group(3)) if match.group(3) else 0  # –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä

    if num > 100:
        return "‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫—É–±–æ–≤ (–º–∞–∫—Å–∏–º—É–º 100)."

    rolls = [random.randint(1, sides) for _ in range(num)]
    total = sum(rolls) + mod

    details = " + ".join(map(str, rolls))
    if mod:
        details += f" {'+' if mod > 0 else ''}{mod}"
    return f"üé≤ {expr} ‚Üí {details} = **{total}**"

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /roll ---
@dp.message(Command("roll"))
async def cmd_roll(message: types.Message):
    args = message.text.split(maxsplit=1)
    if len(args) == 1:
        await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /roll XdY [+Z/-Z]\n–ü—Ä–∏–º–µ—Ä: /roll 2d6+3")
    else:
        expr = args[1]
        result = roll_dice(expr)
        await message.answer(result, parse_mode="Markdown")
        
import sqlite3

conn = sqlite3.connect("data.sqlite")
cursor = conn.cursor()
cursor.execute("""
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    name TEXT,
    age INTEGER
)
""")
conn.commit()


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
